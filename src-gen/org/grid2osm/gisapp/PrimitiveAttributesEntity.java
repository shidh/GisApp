package org.grid2osm.gisapp;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table PRIMITIVE_ATTRIBUTES_ENTITY.
 */
public class PrimitiveAttributesEntity {

    private Long id;
    private Boolean accountPickerIsOpen;
    private Long accumulatedTransferSize;
    private Boolean gesturesEnabled;
    private String gMail;
    private String gToken;
    private Integer imageViewIndex;
    private Boolean locationTraceEnabled;
    private String photoFilePath;
    private Integer progressBar;
    private Integer progressCircle;
    private Boolean resumeSend;
    private Boolean takeAnotherPhoto;
    private Long totalTransferSize;

    public PrimitiveAttributesEntity() {
    }

    public PrimitiveAttributesEntity(Long id) {
        this.id = id;
    }

    public PrimitiveAttributesEntity(Long id, Boolean accountPickerIsOpen, Long accumulatedTransferSize, Boolean gesturesEnabled, String gMail, String gToken, Integer imageViewIndex, Boolean locationTraceEnabled, String photoFilePath, Integer progressBar, Integer progressCircle, Boolean resumeSend, Boolean takeAnotherPhoto, Long totalTransferSize) {
        this.id = id;
        this.accountPickerIsOpen = accountPickerIsOpen;
        this.accumulatedTransferSize = accumulatedTransferSize;
        this.gesturesEnabled = gesturesEnabled;
        this.gMail = gMail;
        this.gToken = gToken;
        this.imageViewIndex = imageViewIndex;
        this.locationTraceEnabled = locationTraceEnabled;
        this.photoFilePath = photoFilePath;
        this.progressBar = progressBar;
        this.progressCircle = progressCircle;
        this.resumeSend = resumeSend;
        this.takeAnotherPhoto = takeAnotherPhoto;
        this.totalTransferSize = totalTransferSize;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Boolean getAccountPickerIsOpen() {
        return accountPickerIsOpen;
    }

    public void setAccountPickerIsOpen(Boolean accountPickerIsOpen) {
        this.accountPickerIsOpen = accountPickerIsOpen;
    }

    public Long getAccumulatedTransferSize() {
        return accumulatedTransferSize;
    }

    public void setAccumulatedTransferSize(Long accumulatedTransferSize) {
        this.accumulatedTransferSize = accumulatedTransferSize;
    }

    public Boolean getGesturesEnabled() {
        return gesturesEnabled;
    }

    public void setGesturesEnabled(Boolean gesturesEnabled) {
        this.gesturesEnabled = gesturesEnabled;
    }

    public String getGMail() {
        return gMail;
    }

    public void setGMail(String gMail) {
        this.gMail = gMail;
    }

    public String getGToken() {
        return gToken;
    }

    public void setGToken(String gToken) {
        this.gToken = gToken;
    }

    public Integer getImageViewIndex() {
        return imageViewIndex;
    }

    public void setImageViewIndex(Integer imageViewIndex) {
        this.imageViewIndex = imageViewIndex;
    }

    public Boolean getLocationTraceEnabled() {
        return locationTraceEnabled;
    }

    public void setLocationTraceEnabled(Boolean locationTraceEnabled) {
        this.locationTraceEnabled = locationTraceEnabled;
    }

    public String getPhotoFilePath() {
        return photoFilePath;
    }

    public void setPhotoFilePath(String photoFilePath) {
        this.photoFilePath = photoFilePath;
    }

    public Integer getProgressBar() {
        return progressBar;
    }

    public void setProgressBar(Integer progressBar) {
        this.progressBar = progressBar;
    }

    public Integer getProgressCircle() {
        return progressCircle;
    }

    public void setProgressCircle(Integer progressCircle) {
        this.progressCircle = progressCircle;
    }

    public Boolean getResumeSend() {
        return resumeSend;
    }

    public void setResumeSend(Boolean resumeSend) {
        this.resumeSend = resumeSend;
    }

    public Boolean getTakeAnotherPhoto() {
        return takeAnotherPhoto;
    }

    public void setTakeAnotherPhoto(Boolean takeAnotherPhoto) {
        this.takeAnotherPhoto = takeAnotherPhoto;
    }

    public Long getTotalTransferSize() {
        return totalTransferSize;
    }

    public void setTotalTransferSize(Long totalTransferSize) {
        this.totalTransferSize = totalTransferSize;
    }

}
